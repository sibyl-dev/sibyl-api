# Configurations for database preprocessing
# =================================================================================================

# Name of database to create
database_name:
# Name of directory in dbdata with csv and pkl files (if different from database_name)
directory:
# If true, automatically drop existing database
DROP_OLD: False

# Training data configurations
# =================================================================================================
# If true, include the full training database in loading (set to False if privacy is a concern)
include_database: True
# Name of database file
dataset_fn:
# Number of entries from database to include (if not given, include all)
num_from_database:


# Entity processing configurations
# =================================================================================================
# filename of fitted, pickled Pyreal transformers
pre_transformers_fn:
# filename of mappings csv for one-hot decoder (TODO: add sample format)
one_hot_decode_fn:
# If true, impute data using pyreal.MultiTypeImputer()
impute: True

# Model processing configurations
# =================================================================================================
# Name of target column in database
target:
# filename of pickled model
pickle_model_fn:
# filename of csv with weights for linear model
weights_fn:
# filename with thresholds for thresholding model output
threshold_fn:
# filename of mappings csv for one-hot encoder (TODO: add sample format)
one_hot_encode_fn:
# filename of pickled list of model transformers
model_transformers_fn:
# filename of csv with pretrained importances
importance_fn: "importances.csv"
# filename of pickled explainer
explainer_fn:
# shap type to use for explainer if not provided
shap_type: # TODO: make this process smoother
# If False, do not prefit the similar entities explainer. Reduces objects sizes for database, but increases runtime
prefit_se: True

# GUI configurations
# =================================================================================================
# Preset term for gui config, used to automatically fill in some configurations. Overridden by other configs
# Sibyl-API preprocessing currently supports:
#   cost_usd, profit_usd, success, failure
gui_preset:
# Fine-grained gui configurations (override gui_preset)
gui_config:
  # Model prediction type, one of "numeric", "boolean", "categorical"
  pred_type:
  # If prediction type is "boolean", the name corresponding to a positive prediction
  pos_pred_name:
  # If prediction type is "boolean", the name corresponding to a negative prediction
  neg_pred_name:
  # If true, increase in model predictions correspond to a negative outcome. If False, increases in model predictions
  #   correspond to a positive outcome. If None, no statement is made either way
  model_pred_bad_outcome:
  # Python f-string for formatting model predictions
  pred_format_string:
  # Color to use for positive contributions
  pos_color:
  # Color to use for negative contributions
  neg_color:


