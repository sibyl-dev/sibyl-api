{"info": {"description": "\n<p align=\"left\">\n<img width=10% src=\"https://dai.lids.mit.edu/wp-content/uploads/2018/06/Logo_DAI_highres.png\" alt=\u201cDAI-Lab\u201d />\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n\n# What is Sibyl?\n**Sibyl** is a highly configurable API for supporting the full human-ML decision making workflow.\n\n# License\n\n[The MIT License](https://github.com/sibyl-dev/sibyl-api/blob/master/LICENSE)\n", "title": "Sibyl RestAPI Documentation", "version": "1.0.0"}, "paths": {"/api/v1/entities/{eid}/": {"put": {"summary": "Modify an Entity by ID", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EntityWithoutEid"}}}}, "responses": {"200": {"description": "Entity that was modified", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entity"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "eid", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the entity to modify/create"}], "tags": ["entity"]}, "get": {"summary": "Get an Entity by ID", "responses": {"200": {"description": "Entity to be returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entity"}, "example": {"eid": "123", "features": {"row_1": {"f1": 10, "f2": 20}, "row_2": {"f1": 20, "f2": 30}}, "row_ids": ["row_1", "row_2"], "labels": {"row_1": 1, "row_2": 0}, "property": {"group_id": "group_1"}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "eid", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the entity to get"}, {"name": "row_id", "in": "query", "schema": {"type": "string"}, "description": "ID of the row to get for the entity"}], "tags": ["entity"]}}, "/api/v1/entities/": {"put": {"summary": "Insert or modify multiple entities", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/Entity"}}}}}}}, "responses": {"200": {"description": "All entities", "content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/Entity"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["entity"]}, "get": {"summary": "Get all Entities", "description": "If group ID is specified, return entities of that group.<br/>", "responses": {"200": {"description": "All entities", "content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/EntitySimplified"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "group_id", "in": "query", "schema": {"type": "string"}, "required": false, "description": "ID of the group to filter entities"}], "tags": ["entity"]}}, "/api/v1/groups/": {"get": {"summary": "Get all EntityGroups", "responses": {"200": {"description": "All EntityGroups", "content": {"application/json": {"schema": {"type": "object", "properties": {"groups": {"type": "array", "items": {"type": "object", "properties": {"group_id": {"type": "string"}, "property": {"type": "object"}}}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["group"]}}, "/api/v1/groups/{group_id}/": {"get": {"summary": "Get an EntityGroup by ID", "responses": {"200": {"description": "Group to be returned", "content": {"application/json": {"schema": {"type": "object", "properties": {"group_id": {"type": "string"}, "property": {"type": "object"}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "group_id", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the group to get"}], "tags": ["group"]}}, "/api/v1/features/{feature_name}/": {"put": {"summary": "Update or create a feature by name", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FeatureWithoutName"}}}}, "responses": {"200": {"description": "Feature information", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Feature"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "feature_name", "in": "path", "schema": {"type": "string"}, "required": true, "description": "Name of the feature to update"}], "tags": ["feature"]}, "get": {"summary": "Get a feature by name", "responses": {"200": {"description": "Feature information", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Feature"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "feature_name", "in": "path", "schema": {"type": "string"}, "required": true, "description": "Name of the feature to get info for"}], "tags": ["feature"]}}, "/api/v1/features/": {"put": {"summary": "Update or create multiple features", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"features": {"type": "array", "items": {"$ref": "#/components/schemas/Feature"}}}}}}}, "responses": {"200": {"description": "All added features", "content": {"application/json": {"schema": {"type": "object", "properties": {"features": {"type": "array", "items": {"$ref": "#/components/schemas/Feature"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["feature"]}, "get": {"summary": "Get all features", "responses": {"200": {"description": "All features", "content": {"application/json": {"schema": {"type": "object", "properties": {"features": {"type": "array", "items": {"$ref": "#/components/schemas/Feature"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["feature"]}}, "/api/v1/categories/": {"put": {"summary": "Add or modify categories", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"categories": {"type": "array", "items": {"$ref": "#/components/schemas/Category"}}}}}}}, "responses": {"200": {"description": "Categories added or modified", "content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/Category"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["feature"]}, "get": {"summary": "Get all feature categories", "responses": {"200": {"description": "All categories", "content": {"application/json": {"schema": {"type": "object", "properties": {"categories": {"type": "array", "items": {"$ref": "#/components/schemas/Category"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["feature"]}}, "/api/v1/models/{model_id}/": {"put": {"summary": "Update or create a model by id.", "description": "Note: Does not currently support updating realapp.", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FullModelNoRealapp"}}}}, "responses": {"200": {"description": "Information about update model", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Model"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "model_id", "in": "path", "schema": {"type": "string"}, "required": true, "description": "Name of the model to update/create"}], "tags": ["model"]}, "get": {"summary": "Get a Model by ID", "responses": {"200": {"description": "Information about the model", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Model"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "model_id", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the model to get information about"}], "tags": ["model"]}}, "/api/v1/models/": {"get": {"summary": "Get all Models", "responses": {"200": {"description": "All models", "content": {"application/json": {"schema": {"type": "object", "properties": {"models": {"type": "array", "items": {"type": "object", "properties": {"model_id": {"type": "string"}}}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["model"]}}, "/api/v1/importance/": {"get": {"summary": "Get Model feature importances", "responses": {"200": {"description": "Feature importance for the model", "content": {"application/json": {"schema": {"type": "object", "properties": {"importances": {"type": "array", "items": {"type": "object", "properties": {"feature": {"type": "string"}, "importance": {"type": "float"}}}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "model_id", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the model to get importances for"}], "tags": ["model"]}}, "/api/v1/prediction/": {"get": {"summary": "Get a model prediction", "responses": {"200": {"description": "Prediction", "content": {"application/json": {"schema": {"type": "object", "properties": {"output": {"type": "number"}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "model_id", "in": "query", "schema": {"type": "string"}, "required": true, "description": "ID of the model to use to predict"}, {"name": "eid", "in": "query", "schema": {"type": "string"}, "required": true, "description": "ID of the entity to predict on"}, {"name": "row_id", "in": "query", "schema": {"type": "string"}, "description": "ID of row to predict on (defaults to first row)"}], "tags": ["model"]}}, "/api/v1/multi_prediction/": {"post": {"summary": "Get multiple model predictions.", "description": "If given multiple eids, return one prediction per eid (first row). If given one eid, return one prediction per row_id. Only one of eids and row_ids can contain more than one element.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eids": {"type": "array", "items": {"type": "string"}}, "model_id": {"type": "string"}, "row_ids": {"type": "array", "items": {"type": "string"}, "description": "row_ids to select from the given eid"}, "return_proba": {"type": "boolean"}}, "required": ["eids", "model_id"]}}}}, "responses": {"200": {"description": "Model predictions", "content": {"application/json": {"schema": {"type": "object", "properties": {"predictions": {"type": "array", "items": {"type": "number"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["model"]}}, "/api/v1/context/{context_id}/": {"put": {"summary": "Update or create a context", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Context"}}}}, "responses": {"200": {"description": "Information about update model", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Context"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "context_id", "in": "path", "schema": {"type": "string"}, "description": "ID of the context to update/create", "required": true}], "tags": ["context"]}, "get": {"summary": "Get a Context by ID", "responses": {"200": {"description": "Context to be returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Context"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "context_id", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the context to get"}], "tags": ["context"]}}, "/api/v1/contexts/": {"get": {"summary": "Get all Context ids", "responses": {"200": {"description": "Get all contexts", "content": {"application/json": {"schema": {"type": "object", "properties": {"contexts": {"type": "array", "items": {"$ref": "#/components/schemas/Context"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["context"]}}, "/api/v1/contributions/": {"post": {"summary": "Get feature contributions", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eid": {"type": "string"}, "row_id": {"type": "string"}, "model_id": {"type": "string"}}, "required": ["eid", "model_id"]}}}}, "responses": {"200": {"description": "Feature contributions", "content": {"application/json": {"schema": {"type": "object", "properties": {"contributions": {"type": "object", "additionalProperties": {"type": "number"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["computing"]}}, "/api/v1/multi_contributions/": {"post": {"summary": "Get feature contributions for multiple eids, or for multiple row_ids in a single entity", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eids": {"type": "array", "items": {"type": "string"}}, "model_id": {"type": "string"}, "row_ids": {"type": "array", "items": {"type": "string"}}}, "required": ["eids", "model_id"]}}}}, "responses": {"200": {"description": "Feature contributions", "content": {"application/json": {"schema": {"type": "object", "properties": {"contributions": {"type": "object", "properties": {"Feature Name": {"type": "string"}, "Feature Value": {"type": ["string", "number"]}, "Contribution": {"type": "number"}, "Average\\/Mode": {"type": ["string", "number"]}}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["computing"]}}, "/api/v1/single_change_predictions/": {"post": {"summary": "Get the resulting model predictions after changing the value of a single feature", "description": "of an entity for each feature-value pair provided in the request.<br/>", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eid": {"type": "string"}, "row_id": {"type": "string"}, "model_id": {"type": "string"}, "changes": {"$ref": "#/components/schemas/Changes"}, "return_proba": {"type": "boolean"}}, "required": ["eid", "model_id", "changes"]}}}}, "responses": {"200": {"description": "Resulting predictions after making changes", "content": {"application/json": {"schema": {"type": "object", "properties": {"predictions": {"type": "array", "items": {"type": "array", "items": {"type": ["string", "number"]}}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["computing"]}}, "/api/v1/modified_prediction/": {"post": {"summary": "Get the resulting model prediction after making all changes", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eid": {"type": "string"}, "row_id": {"type": "string"}, "model_id": {"type": "string"}, "changes": {"$ref": "#/components/schemas/Changes"}, "return_proba": {"type": "boolean"}}, "required": ["eid", "model_id", "changes"]}}}}, "responses": {"200": {"description": "Resulting predictions after making changes", "content": {"application/json": {"schema": {"type": "object", "properties": {"prediction": {"type": "number"}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["computing"]}}, "/api/v1/modified_contribution/": {"post": {"summary": "Get the feature contribution of an entity modified by changes", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eid": {"type": "string"}, "row_id": {"type": "string"}, "model_id": {"type": "string"}, "changes": {"$ref": "#/components/schemas/Changes"}}, "required": ["eid", "model_id", "changes"]}}}}, "responses": {"200": {"description": "Resulting feature contribution after making changes to entity", "content": {"application/json": {"schema": {"type": "object", "properties": {"contribution": {"type": "object", "properties": {"Feature Value": {"type": ["string", "number"]}, "Contribution": {"type": "number"}, "Average\\/Mode": {"type": ["string", "number"]}}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["computing"]}}, "/api/v1/similar_entities/": {"post": {"summary": "Get nearest neighbors for list of eids, or for all rows in a single eid", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"eids": {"type": "array", "items": {"type": "string"}}, "model_id": {"type": "string"}}, "required": ["eids", "model_id"]}}}}, "responses": {"200": {"description": "Feature contributions", "content": {"application/json": {"schema": {"type": "object", "properties": {"contributions": {"type": "array", "items": {"type": "number"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["computing"]}}}, "definitions": {}, "openapi": "3.0.2", "tags": [{"name": "entity", "description": "Entities being analyzed"}, {"name": "feature", "description": "ML model input features"}, {"name": "model", "description": "The full ML model pipeline"}, {"name": "context", "description": "Application-specific configurations"}, {"name": "group", "description": "Entity groups"}, {"name": "computing", "description": "Computed explanations and other ML augmenting information"}], "components": {"schemas": {"Referral": {"type": "object", "properties": {"referral_id": {"type": "string"}, "property": {"type": "object", "additionalProperties": {}}}, "required": ["event_id"]}, "Event": {"type": "object", "properties": {"event_id": {"type": "string"}, "datetime": {"type": "string"}, "type": {"type": "string"}, "property": {"type": "object", "additionalProperties": {}}}, "required": ["event_id", "message"]}, "Entity": {"type": "object", "properties": {"eid": {"type": "string", "description": "Entity ID"}, "row_ids": {"type": "array", "items": {"type": "string"}, "description": "Row IDs"}, "features": {"type": "object", "description": "Feature values"}, "labels": {"type": "object", "description": "Ground-truth labels. Only included if available"}, "property": {"type": "object", "additionalProperties": {}, "description": "Additional properties"}}, "required": ["eid"]}, "EntityWithoutEid": {"type": "object", "properties": {"row_ids": {"type": "array", "items": {"type": "string"}, "description": "Row IDs"}, "features": {"type": "object", "description": "Feature values"}, "labels": {"type": "object", "description": "Ground-truth labels. Only included if available"}, "property": {"type": "object", "additionalProperties": {}, "description": "Additional properties"}}, "required": ["eid"]}, "EntitySimplified": {"type": "object", "properties": {"eid": {"type": "string", "readOnly": true, "description": "Entity ID"}, "row_ids": {"type": "array", "items": {"type": "string"}, "description": "Row IDs"}, "labels": {"type": "object", "description": "Ground-truth labels. Only included if available"}, "property": {"type": "object", "additionalProperties": {}, "description": "Additional properties"}}, "required": ["eid"]}, "Model": {"type": "object", "properties": {"id": {"type": "string"}, "description": {"type": "string"}, "performance": {"type": "string"}}, "required": ["id"]}, "FullModelNoRealapp": {"type": "object", "properties": {"description": {"type": "string"}, "performance": {"type": "string"}, "importances": {"type": "object"}, "training_set_id": {"type": "string"}}}, "Feature": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "negated_description": {"type": "string"}, "category": {"type": "string"}, "type": {"type": "string"}}, "required": ["name", "type"]}, "FeatureWithoutName": {"type": "object", "properties": {"description": {"type": "string"}, "negated_description": {"type": "string"}, "category": {"type": "string"}, "type": {"type": "string"}}, "required": []}, "Category": {"type": "object", "properties": {"name": {"type": "string", "description": "Category name"}, "color": {"type": "string", "description": "Color to use for category (HEX)"}, "abbreviation": {"type": "string", "description": "Abbreviated category name"}}, "required": ["name"]}, "Context": {"type": "object", "properties": {"config": {"type": "object"}}}, "Changes": {"type": "object", "additionalProperties": {"oneOf": [{"type": "string"}, {"type": "number"}]}}, "Message": {"type": "object", "properties": {"code": {"type": "string", "minimum": 100, "maximum": 600}, "message": {"type": "string"}}, "required": ["code", "message"]}, "TestMessage": {"allOf": [{"$ref": "#/components/schemas/Message"}, {"type": "object", "properties": {"data": {}}}]}}, "responses": {"SuccessMessage": {"description": "Success message", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "ErrorMessage": {"description": "Error message", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}}}, "servers": [{"url": "http://localhost:3000/", "description": "Internal staging server for testing"}, {"url": "http://sibyl.lids.mit.edu:3000/", "description": "Main production server"}]}