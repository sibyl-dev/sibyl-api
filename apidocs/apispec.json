{"info": {"description": "\n<p align=\"left\">\n<img width=10% src=\"https://dai.lids.mit.edu/wp-content/uploads/2018/06/Logo_DAI_highres.png\" alt=\u201cDAI-Lab\u201d />\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n\n# What is Sibyl?\n**Sibyl** is a highly configurable API for supporting the full human-ML decision making workflow.\n\n# License\n\n[The MIT License](https://github.com/sibyl-dev/sibyl-api/blob/master/LICENSE)\n", "title": "Sibyl RestAPI Documentation", "version": "1.0.0"}, "paths": {"/api/v1/entities/{eid}/": {"put": {"summary": "Modify an Entity by ID", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/EntityWithoutEid"}}}}, "responses": {"200": {"description": "Entity that was modified", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entity"}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "eid", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the entity to modify/create"}], "tags": ["entity"]}, "get": {"summary": "Get an Entity by ID", "responses": {"200": {"description": "Entity to be returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entity"}, "example": {"eid": "123", "features": {"row_1": {"f1": 10, "f2": 20}, "row_2": {"f1": 20, "f2": 30}}, "row_ids": ["row_1", "row_2"], "labels": {"row_1": 1, "row_2": 0}, "property": {"group_id": "group_1"}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "eid", "in": "path", "schema": {"type": "string"}, "required": true, "description": "ID of the entity to get"}, {"name": "row_id", "in": "query", "schema": {"type": "string"}, "description": "ID of the row to get for the entity"}], "tags": ["entity"]}}, "/api/v1/entities/": {"put": {"summary": "Insert or modify multiple entities", "requestBody": {"content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/Entity"}}}}}}}, "responses": {"200": {"description": "All entities", "content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/Entity"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "tags": ["entity"]}, "get": {"summary": "Get all Entities", "description": "If group ID is specified, return entities of that group.<br/>", "responses": {"200": {"description": "All entities", "content": {"application/json": {"schema": {"type": "object", "properties": {"entities": {"type": "array", "items": {"$ref": "#/components/schemas/EntitySimplified"}}}}}}}, "400": {"$ref": "#/components/responses/ErrorMessage"}}, "parameters": [{"name": "group_id", "in": "query", "schema": {"type": "string"}, "required": false, "description": "ID of the group to filter entities"}], "tags": ["entity"]}}}, "definitions": {}, "openapi": "3.0.2", "tags": [{"name": "entity", "description": "Entities being analyzed"}, {"name": "feature", "description": "ML model input features"}, {"name": "model", "description": "The full ML model pipeline"}, {"name": "context", "description": "Application-specific configurations"}, {"name": "group", "description": "Entity groups"}, {"name": "computing", "description": "Computed explanations and other ML augmenting information"}], "components": {"schemas": {"Referral": {"type": "object", "properties": {"referral_id": {"type": "string"}, "property": {"type": "object", "additionalProperties": {}}}, "required": ["event_id"]}, "Event": {"type": "object", "properties": {"event_id": {"type": "string"}, "datetime": {"type": "string"}, "type": {"type": "string"}, "property": {"type": "object", "additionalProperties": {}}}, "required": ["event_id", "message"]}, "Entity": {"type": "object", "properties": {"eid": {"type": "string", "description": "Entity ID"}, "row_ids": {"type": "array", "items": {"type": "string"}, "description": "Row IDs"}, "features": {"type": "object", "description": "Feature values"}, "labels": {"type": "object", "description": "Ground-truth labels. Only included if available"}, "property": {"type": "object", "additionalProperties": {}, "description": "Additional properties"}}, "required": ["eid"]}, "EntityWithoutEid": {"type": "object", "properties": {"row_ids": {"type": "array", "items": {"type": "string"}, "description": "Row IDs"}, "features": {"type": "object", "description": "Feature values"}, "labels": {"type": "object", "description": "Ground-truth labels. Only included if available"}, "property": {"type": "object", "additionalProperties": {}, "description": "Additional properties"}}, "required": ["eid"]}, "EntitySimplified": {"type": "object", "properties": {"eid": {"type": "string", "readOnly": true, "description": "Entity ID"}, "row_ids": {"type": "array", "items": {"type": "string"}, "description": "Row IDs"}, "labels": {"type": "object", "description": "Ground-truth labels. Only included if available"}, "property": {"type": "object", "additionalProperties": {}, "description": "Additional properties"}}, "required": ["eid"]}, "Model": {"type": "object", "properties": {"id": {"type": "string"}, "description": {"type": "string"}, "performance": {"type": "string"}}, "required": ["id"]}, "FullModelNoRealapp": {"type": "object", "properties": {"description": {"type": "string"}, "performance": {"type": "string"}, "importances": {"type": "object"}, "training_set_id": {"type": "string"}}}, "Feature": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "negated_description": {"type": "string"}, "category": {"type": "string"}, "type": {"type": "string"}}, "required": ["name", "type"]}, "FeatureWithoutName": {"type": "object", "properties": {"description": {"type": "string"}, "negated_description": {"type": "string"}, "category": {"type": "string"}, "type": {"type": "string"}}, "required": []}, "Category": {"type": "object", "properties": {"name": {"type": "string", "description": "Category name"}, "color": {"type": "string", "description": "Color to use for category (HEX)"}, "abbreviation": {"type": "string", "description": "Abbreviated category name"}}, "required": ["name"]}, "Context": {"type": "object", "properties": {"config": {"type": "object"}}}, "Changes": {"type": "object", "additionalProperties": {"oneOf": [{"type": "string"}, {"type": "number"}]}}, "Message": {"type": "object", "properties": {"code": {"type": "string", "minimum": 100, "maximum": 600}, "message": {"type": "string"}}, "required": ["code", "message"]}, "TestMessage": {"allOf": [{"$ref": "#/components/schemas/Message"}, {"type": "object", "properties": {"data": {}}}]}}, "responses": {"SuccessMessage": {"description": "Success message", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "ErrorMessage": {"description": "Error message", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}}}, "servers": [{"url": "http://localhost:3000/", "description": "Internal staging server for testing"}, {"url": "http://sibyl.lids.mit.edu:3000/", "description": "Main production server"}]}